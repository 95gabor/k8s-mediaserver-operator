name: Deploy KinD cluster and test resources
on:
  pull_request:
    types: [opened, reopened, edited, synchronize]

jobs:
  deploy-cluster:
    name: Build images and deploy KinD cluster with test resources
    env:
      ingress_host: k8s-mediaserver.k8s.test
      plex_ingress_host: k8s-plex.k8s.test
      image_name: k8s-mediaserver-operator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build Image - x86_64
        id: build-image-x86_64
        uses: docker/build-push-action@v3
        with:
          tags: ${{ env.image_name }}:${{ github.sha }}
          file: ./Dockerfile

      - name: Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind
          config: tests/kind-cluster.yml

      - name: Load images into KinD nodes
        run: |
          kind load docker-image ${{ env.image_name }}:${{ github.sha }}
          sed -i "s/#imagename#/${{ env.image_name }}:${{ github.sha }}/g" tests/k8s-mediaserver-operator.yml

      - name: Deploy ingress to newly created cluster
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait pod --for=jsonpath='{.status.phase}'=Running -n ingress-nginx -l app.kubernetes.io/component=controller --all

      - name: Deploy k8s-mediaserver-operator
        run: |
          kubectl apply -f k8s-mediaserver-operator.yml
          kubectl wait pod --for=jsonpath='{.status.phase}'=Running -n k8s-mediaserver-operator-system --all

      - name: Deploy k8s-mediaserver CRD
        run: |
          kubectl create ns mediaserver
          kubectl apply -f tests/k8s-mediaserver.yml -n mediaserver
          sleep 15
          kubectl wait pod --for=jsonpath='{.status.phase}'=Running -n mediaserver --all --timeout 120s

      - name: Edit hosts file and test apps
        run: |
          sudo echo "127.0.0.1   ${{ env.plex_ingress_host }} ${{ env.ingress_host }}" | sudo tee -a /etc/hosts
          wget ${{ env.ingress_host }}/jackett
          wget ${{ env.ingress_host }}/sonarr
          wget ${{ env.ingress_host }}/radarr
          wget ${{ env.ingress_host }}/sabnzbd
          curl ${{ env.plex_ingress_host }} 